{"version":3,"sources":["actions/index.js","pages/Login.js","actions/loginUser.js","actions/isLoggedAction.js","components/Header.jsx","actions/requestExchangeRate.js","actions/editExpense.js","components/AddExpensesBtn.jsx","actions/addExpenses.js","actions/addExpensesIndex.js","actions/clearInputHandler.js","actions/setAddition.js","actions/aprovedEdition.js","components/InputExpenses.jsx","components/InputDescription.jsx","actions/requestCurrency.js","components/CurrenciesSelection.jsx","components/MethodSelection.jsx","components/TagSelection.jsx","components/TableHead.jsx","components/DeleteBtn.jsx","actions/deleteExpense.js","components/EditBtn.jsx","components/TableBody.jsx","components/ExpensesTable.jsx","components/ExpensesInput.jsx","actions/handleInputs.js","pages/Wallet.js","App.js","reducers/user.js","reducers/wallet.js","reducers/logStatus.js","reducers/inputHandler.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["LOGIN_USER","ADD_EXPENSES","IS_LOGGED","GET_CURRENCY","REQUEST_CURRENCY","FAILED_REQUEST","HANDLE_INPUTS","GET_EXCHANGE_RATES","ADD_EXPENSES_INDEX","CLEAR_INPUT_HANDLER","DELETE_EXPENSE","EDIT_EXPENSE","SET_ADDITION","ADD_EDITIONS","Login","state","email","password","verification","emailVerified","passwordVerified","handleChange","bind","handleClick","verifyEmail","verifyPassword","target","name","value","this","setState","props","login","isLogged","regexEmail","test","prevState","length","logStatus","to","className","htmlFor","type","onChange","data-testid","onClick","disabled","Component","connect","dispatch","payload","loginUserAction","Header","sumExpenses","prevProps","expenses","currency","map","exp","conversion","Object","values","exchangeRates","forEach","rate","codein","code","ask","parseFloat","toFixed","reduce","acc","num","user","wallet","fetchExchangeRatesAction","fetch","then","r","json","getExchangeRates","error","failedRequest","editExpenseAction","editionExp","AddExpensesBtn","getLastExpenseId","handleEdition","handlingInputs","addExpenses","clearInputHandler","resetInputs","setAddition","additionToExpenses","addExpensesIndex","newExpenseId","id","a","fetchExchangeRates","aprovedEdition","editExpense","description","method","tag","editionOfExpense","inputHandler","addExpensesAction","addExpensesIndexAction","aprovedEditionAction","InputExpenses","changeInput","InputDescription","fetchCurrenciesAction","keys","getCurrency","CurrenciesSelection","fetchCurrencies","currencies","option","index","MethodSelection","TagSelection","TableHead","DeleteBtn","handleDelete","deleteExpense","filter","item","parseInt","EditBtn","handleEdit","editExpenseValue","elem","Number","TableBody","handleCurrencyName","handleExchangeRate","CurrencyToConvert","ConvertTheValue","role","ExpensesTable","ExpensesInput","event","handlingChange","key","handleInputsAction","Wallet","React","App","exact","path","component","INITIAL_STATE","isFetching","appReducer","combineReducers","action","concat","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2e2b4d1b.chunk.js","sourcesContent":["// Coloque aqui suas actions\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const IS_LOGGED = 'IS_LOGGED';\nexport const GET_CURRENCY = 'GET_CURRENCY';\nexport const REQUEST_CURRENCY = 'REQUEST_CURRENCY';\nexport const FAILED_REQUEST = 'FAILED_REQUEST';\nexport const HANDLE_INPUTS = 'HANDLE_INPUTS';\nexport const GET_EXCHANGE_RATES = 'GET_EXCHANGE_RATES';\nexport const ADD_EXPENSES_INDEX = 'ADD_EXPENSES_INDEX';\nexport const CLEAR_INPUT_HANDLER = 'CLEAR_INPUT_HANDLER';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const SET_ADDITION = 'SET_ADDITION';\nexport const ADD_EDITIONS = 'ADD_EDITIONS';\nexport const SET_EDITION = 'SET_EDITION';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport loginUserAction from '../actions/loginUser';\nimport isLoggedAction from '../actions/isLoggedAction';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      verification: { emailVerified: false, passwordVerified: false },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.verifyPassword = this.verifyPassword.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n\n    this.verifyEmail(name, value);\n    this.verifyPassword(name, value);\n  }\n\n  handleClick() {\n    const { login, isLogged } = this.props;\n    const { email } = this.state;\n\n    login(email);\n    isLogged();\n  }\n\n  verifyEmail(name, email) {\n    const regexEmail = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i;\n\n    if (name === 'email' && regexEmail.test(email)) {\n      this.setState((prevState) => (\n        { verification: { ...prevState.verification, emailVerified: true } }\n      ));\n    } else if (name === 'email' && !regexEmail.test(email)) {\n      this.setState((prevState) => (\n        { verification: { ...prevState.verification, emailVerified: false } }\n      ));\n    }\n  }\n\n  verifyPassword(name, password) {\n    const minPasswordLength = 6;\n\n    if (name === 'password' && password.length >= minPasswordLength) {\n      this.setState((prevState) => (\n        { verification: { ...prevState.verification, passwordVerified: true } }\n      ));\n    } else if (name === 'password' && !password.length < minPasswordLength) {\n      this.setState((prevState) => (\n        { verification: { ...prevState.verification, passwordVerified: false } }\n      ));\n    }\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      verification: { emailVerified, passwordVerified },\n    } = this.state;\n    const { logStatus } = this.props;\n    if (logStatus) {\n      return (<Redirect to=\"/carteira\" />);\n    }\n\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-container\">\n          <label htmlFor=\"email\" className=\"label-container\">\n            Email:\n            <input\n              name=\"email\"\n              type=\"text\"\n              value={ email }\n              onChange={ this.handleChange }\n              data-testid=\"email-input\"\n              className=\"input-container\"\n            />\n          </label>\n          <label htmlFor=\"password\" className=\"label-container\">\n            Password:\n            <input\n              name=\"password\"\n              type=\"text\"\n              value={ password }\n              onChange={ this.handleChange }\n              data-testid=\"password-input\"\n              className=\"input-container\"\n            />\n          </label>\n        </div>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n          disabled={ !(emailVerified && passwordVerified) }\n          className=\"btn-container\"\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  logStatus: state.logStatus.isLogged,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (email) => dispatch(loginUserAction(email)),\n  isLogged: () => dispatch(isLoggedAction()),\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isLogged: PropTypes.func.isRequired,\n  logStatus: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { LOGIN_USER } from './index';\n\nexport default function loginUserAction(email) {\n  return {\n    type: LOGIN_USER,\n    payload: {\n      email,\n    },\n  };\n}\n","import { IS_LOGGED } from './index';\n\nexport default function isLoggedAction() {\n  return {\n    type: IS_LOGGED,\n    payload: {\n      isLogged: true,\n    },\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.sumExpenses = this.sumExpenses.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { expenses } = this.props;\n    if (expenses !== prevProps.expenses) {\n      this.sumExpenses();\n    }\n  }\n\n  sumExpenses() {\n    const { expenses } = this.props;\n    let sum = [];\n    const currency = expenses.map((exp) => {\n      const rates = Object.values(exp.exchangeRates);\n      let conversion;\n      rates.forEach((rate) => {\n        if (rate.codein === 'BRL' && rate.code === exp.currency) {\n          conversion = (rate.ask * exp.value);\n        }\n      });\n      return parseFloat(conversion.toFixed(2));\n    });\n    sum = [...currency];\n    const reduceSum = ((acc, num) => acc + num);\n    return sum.reduce(reduceSum, 0).toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n    return (\n      <header className=\"wallet-header-container\">\n        <h4 className=\"wallet-info-header\">\n          Email:\n          <span data-testid=\"email-field\" className=\"wallet-info\">{ email }</span>\n        </h4>\n        <h4 className=\"wallet-info-header\">\n          Despesas gerais:\n          <span\n            data-testid=\"total-field\"\n            className=\"wallet-info\"\n          >\n            { this.sumExpenses() }\n          </span>\n          <span data-testid=\"header-currency-field\" className=\"wallet-info\">BRL</span>\n        </h4>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import { GET_EXCHANGE_RATES, FAILED_REQUEST } from './index';\n\nfunction getExchangeRates(json) {\n  return {\n    type: GET_EXCHANGE_RATES,\n    payload: json,\n  };\n}\n\nfunction failedRequest(error) {\n  return { type: FAILED_REQUEST, payload: error };\n}\n\nexport default function fetchExchangeRatesAction() {\n  return (dispatch) => fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((r) => r.json()\n      .then(\n        (json) => dispatch(getExchangeRates(json)),\n        (error) => dispatch(failedRequest(error)),\n      ));\n}\n","import { EDIT_EXPENSE } from './index';\n\nexport default function editExpenseAction(editionExp) {\n  return {\n    type: EDIT_EXPENSE,\n    payload: editionExp,\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchExchangeRatesAction from '../actions/requestExchangeRate';\nimport addExpensesAction from '../actions/addExpenses';\nimport clearInputHandlerAction from '../actions/clearInputHandler';\nimport addExpensesIndexAction from '../actions/addExpensesIndex';\nimport setAdditionAction from '../actions/setAddition';\nimport aprovedEditionAction from '../actions/aprovedEdition';\nimport editExpenseAction from '../actions/editExpense';\n\nclass AddExpensesBtn extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getLastExpenseId = this.getLastExpenseId.bind(this);\n    this.handleEdition = this.handleEdition.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {\n      handlingInputs,\n      addExpenses,\n      clearInputHandler,\n      resetInputs,\n      setAddition,\n      additionToExpenses,\n    } = this.props;\n\n    if (additionToExpenses) {\n      setAddition();\n      addExpenses(handlingInputs);\n      clearInputHandler();\n      resetInputs();\n    }\n  }\n\n  getLastExpenseId() {\n    const { expenses, addExpensesIndex } = this.props;\n    let newExpenseId = {};\n    if (expenses.length > 0) {\n      const { id } = expenses[expenses.length - 1];\n      newExpenseId = { id: id + 1 };\n    } else {\n      newExpenseId = { id: 0 };\n    }\n    addExpensesIndex(newExpenseId);\n  }\n\n  async handleClick() {\n    const {\n      fetchExchangeRates,\n      setAddition,\n    } = this.props;\n\n    await fetchExchangeRates();\n    await this.getLastExpenseId();\n    await setAddition();\n  }\n\n  handleEdition() {\n    const { aprovedEdition, handlingInputs, resetInputs, editExpense } = this.props;\n    const INITIAL_VALUES = [{\n      id: '',\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n      exchangeRates: {},\n    }];\n\n    aprovedEdition(handlingInputs, handlingInputs[0].id);\n    resetInputs();\n    editExpense(INITIAL_VALUES);\n  }\n\n  render() {\n    const { editionOfExpense } = this.props;\n\n    if (editionOfExpense) {\n      return (\n        <button\n          type=\"button\"\n          onClick={ this.handleEdition }\n          className=\"btn-expenses-container\"\n        >\n          Editar despesa\n        </button>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        onClick={ this.handleClick }\n        className=\"btn-expenses-container\"\n      >\n        Adicionar despesa\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  handlingInputs: state.inputHandler.handlingInputs,\n  additionToExpenses: state.inputHandler.additionToExpenses,\n  editionOfExpense: state.inputHandler.editionOfExpense,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchExchangeRates: () => dispatch(fetchExchangeRatesAction()),\n  addExpenses: (handlingInputs) => dispatch(addExpensesAction(handlingInputs)),\n  addExpensesIndex: (newExpenseId) => dispatch(addExpensesIndexAction(newExpenseId)),\n  clearInputHandler: () => dispatch(clearInputHandlerAction()),\n  setAddition: () => dispatch(setAdditionAction()),\n  aprovedEdition: (handlingInputs, id) => dispatch(\n    aprovedEditionAction(handlingInputs, id),\n  ),\n  editExpense: (editionExp) => dispatch(editExpenseAction(editionExp)),\n});\n\nAddExpensesBtn.propTypes = {\n  fetchExchangeRates: PropTypes.func.isRequired,\n  addExpenses: PropTypes.func.isRequired,\n  addExpensesIndex: PropTypes.func.isRequired,\n  handlingInputs: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearInputHandler: PropTypes.func.isRequired,\n  resetInputs: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setAddition: PropTypes.func.isRequired,\n  additionToExpenses: PropTypes.bool.isRequired,\n  editionOfExpense: PropTypes.bool.isRequired,\n  aprovedEdition: PropTypes.func.isRequired,\n  editExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExpensesBtn);\n","import { ADD_EXPENSES } from './index';\n\nexport default function addExpensesAction(handlingInputs) {\n  return {\n    type: ADD_EXPENSES,\n    payload: handlingInputs[0],\n  };\n}\n","import { ADD_EXPENSES_INDEX } from './index';\n\nexport default function addExpensesIndexAction(newExpenseId) {\n  return {\n    type: ADD_EXPENSES_INDEX,\n    payload: { id: newExpenseId },\n  };\n}\n","import { CLEAR_INPUT_HANDLER } from './index';\n\nexport default function clearInputHandlerAction() {\n  return {\n    type: CLEAR_INPUT_HANDLER,\n  };\n}\n","import { SET_ADDITION } from './index';\n\nexport default function setAdditionAction() {\n  return {\n    type: SET_ADDITION,\n  };\n}\n","import { ADD_EDITIONS } from './index';\n\nexport default function aprovedEditionAction(handlingInputs, id) {\n  return {\n    type: ADD_EDITIONS,\n    payload: {\n      handlingInputs,\n      id,\n    },\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputExpenses extends Component {\n  render() {\n    const { value, changeInput } = this.props;\n\n    return (\n      <label htmlFor=\"value\">\n        Valor:\n        <input\n          name=\"value\"\n          type=\"text\"\n          value={ value }\n          onChange={ changeInput }\n          data-testid=\"value-input\"\n          className=\"expenses-input\"\n        />\n      </label>\n    );\n  }\n}\n\nInputExpenses.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeInput: PropTypes.func.isRequired,\n};\n\nexport default InputExpenses;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputDescription extends Component {\n  render() {\n    const { value, changeInput } = this.props;\n\n    return (\n      <label htmlFor=\"description\">\n        Descrição:\n        <input\n          name=\"description\"\n          type=\"text\"\n          value={ value }\n          onChange={ changeInput }\n          data-testid=\"description-input\"\n          className=\"expenses-input\"\n        />\n      </label>\n    );\n  }\n}\n\nInputDescription.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeInput: PropTypes.func.isRequired,\n};\n\nexport default InputDescription;\n","import { GET_CURRENCY, REQUEST_CURRENCY, FAILED_REQUEST } from './index';\n\nfunction getCurrency(json) {\n  return {\n    type: GET_CURRENCY,\n    payload: Object.keys(json),\n  };\n}\n\nfunction requestCurrency() {\n  return { type: REQUEST_CURRENCY };\n}\n\nfunction failedRequest(error) {\n  return { type: FAILED_REQUEST, payload: error };\n}\n\nexport default function fetchCurrenciesAction() {\n  return (dispatch) => {\n    dispatch(requestCurrency());\n    return fetch('https://economia.awesomeapi.com.br/json/all')\n      .then((r) => r.json()\n        .then(\n          (json) => dispatch(getCurrency(json)),\n          (error) => dispatch(failedRequest(error)),\n        ));\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchCurrenciesAction from '../actions/requestCurrency';\n\nclass CurrenciesSelection extends Component {\n  componentDidMount() {\n    const { fetchCurrencies } = this.props;\n    fetchCurrencies();\n  }\n\n  render() {\n    const { currencies, value, changeInput } = this.props;\n\n    return (\n      <label htmlFor=\"currency\">\n        Moeda:\n        <select\n          id=\"currency\"\n          name=\"currency\"\n          value={ value }\n          onChange={ changeInput }\n          data-testid=\"currency-input\"\n          className=\"expenses-input dropdown-height\"\n        >\n          <option key=\"choose\" value=\"\">Escolha a Moeda</option>\n          { currencies.map((option, index) => (option !== 'USDT') && (\n            <option\n              name={ option }\n              key={ index }\n              value={ option }\n              data-testid={ option }\n            >\n              { option }\n            </option>\n          )) }\n        </select>\n      </label>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrencies: () => dispatch(fetchCurrenciesAction()),\n});\n\nCurrenciesSelection.propTypes = {\n  fetchCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  changeInput: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrenciesSelection);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MethodSelection extends Component {\n  render() {\n    const { value, changeInput } = this.props;\n\n    return (\n      <label htmlFor=\"method\">\n        Método de pagamento:\n        <select\n          id=\"method\"\n          name=\"method\"\n          type=\"text\"\n          value={ value }\n          onChange={ changeInput }\n          data-testid=\"method-input\"\n          className=\"expenses-input dropdown-height\"\n        >\n          <option key=\"choose\" value=\"\">Forma de pagamento</option>\n          <option key=\"money\" value=\"Dinheiro\">Dinheiro</option>\n          <option key=\"debit\" value=\"Cartão de débito\">Cartão de débito</option>\n          <option key=\"credit\" value=\"Cartão de crédito\">Cartão de crédito</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nMethodSelection.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeInput: PropTypes.func.isRequired,\n};\n\nexport default MethodSelection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TagSelection extends Component {\n  render() {\n    const { value, changeInput } = this.props;\n\n    return (\n      <label htmlFor=\"tag\">\n        Categoria:\n        <select\n          id=\"tag\"\n          name=\"tag\"\n          type=\"text\"\n          value={ value }\n          onChange={ changeInput }\n          data-testid=\"tag-input\"\n          className=\"expenses-input dropdown-height\"\n        >\n          <option key=\"choose\" value=\"\">Escolha a categoria</option>\n          <option key=\"grocery\" value=\"Alimentação\">Alimentação</option>\n          <option key=\"hobby\" value=\"Lazer\">Lazer</option>\n          <option key=\"work\" value=\"Trabalho\">Trabalho</option>\n          <option key=\"transportation\" value=\"Transporte\">Transporte</option>\n          <option key=\"health\" value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n}\nTagSelection.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeInput: PropTypes.func.isRequired,\n};\n\nexport default TagSelection;\n","import React, { Component } from 'react';\n\nclass TableHead extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <th className=\"table-head-division\">Descrição</th>\n          <th className=\"table-head-division\">Tag</th>\n          <th className=\"table-head-division\">Método de pagamento</th>\n          <th className=\"table-head-division\">Valor</th>\n          <th className=\"table-head-division\">Moeda</th>\n          <th className=\"table-head-division\">Câmbio utilizado</th>\n          <th className=\"table-head-division\">Valor convertido</th>\n          <th className=\"table-head-division\">Moeda de conversão</th>\n          <th>Editar/Excluir</th>\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHead;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport deleteExpenseAction from '../actions/deleteExpense';\n\nclass DeleteBtn extends Component {\n  constructor() {\n    super();\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete({ target }) {\n    const { deleteExpense, expenses } = this.props;\n    const newExpenses = expenses.filter((item) => item.id !== parseInt(target.id, 10));\n    deleteExpense(newExpenses);\n  }\n\n  render() {\n    const { id } = this.props;\n    return (\n      <button\n        id={ id }\n        type=\"button\"\n        onClick={ this.handleDelete }\n        data-testid=\"delete-btn\"\n        className=\"btn-expenses-container\"\n      >\n        Excluir\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (id) => dispatch(deleteExpenseAction(id)),\n});\n\nDeleteBtn.propTypes = {\n  id: PropTypes.number.isRequired,\n  deleteExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteBtn);\n","import { DELETE_EXPENSE } from './index';\n\nexport default function deleteExpenseAction(newExpenses) {\n  return {\n    type: DELETE_EXPENSE,\n    payload: newExpenses,\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport editExpenseAction from '../actions/editExpense';\n\nclass EditBtn extends Component {\n  constructor() {\n    super();\n\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleEdit({ target }) {\n    const { id } = target;\n    const { expenses, editExpense, editExpenseValue } = this.props;\n    const editionExp = expenses.filter((elem) => elem.id === Number(id));\n    editExpenseValue(editionExp[0]);\n    editExpense(editionExp);\n    return '';\n  }\n\n  render() {\n    const { id } = this.props;\n    return (\n      <button\n        id={ id }\n        type=\"button\"\n        onClick={ this.handleEdit }\n        data-testid=\"edit-btn\"\n        className=\"btn-expenses-container\"\n      >\n        Editar\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  editExpense: (editionExp) => dispatch(editExpenseAction(editionExp)),\n});\n\nEditBtn.propTypes = {\n  id: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editExpense: PropTypes.func.isRequired,\n  editExpenseValue: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBtn);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport DeleteBtn from './DeleteBtn';\nimport EditBtn from './EditBtn';\n\nclass TableBody extends Component {\n  constructor() {\n    super();\n\n    this.handleCurrencyName = this.handleCurrencyName.bind(this);\n    this.handleExchangeRate = this.handleExchangeRate.bind(this);\n    this.CurrencyToConvert = this.CurrencyToConvert.bind(this);\n    this.ConvertTheValue = this.ConvertTheValue.bind(this);\n  }\n\n  handleCurrencyName(exp) {\n    const { currency, exchangeRates } = exp;\n    const { name } = exchangeRates[currency];\n\n    return name;\n  }\n\n  handleExchangeRate(exp) {\n    const { currency, exchangeRates } = exp;\n    const { ask } = exchangeRates[currency];\n\n    const rate = Number(ask).toFixed(2);\n\n    return rate;\n  }\n\n  ConvertTheValue(exp) {\n    const { currency, exchangeRates, value } = exp;\n    const { ask } = exchangeRates[currency];\n\n    return (value * ask).toFixed(2);\n  }\n\n  CurrencyToConvert(exp) {\n    const { currency, exchangeRates } = exp;\n    const { codein } = exchangeRates[currency];\n\n    if (codein === 'BRL') {\n      return 'Real';\n    }\n\n    return codein;\n  }\n\n  render() {\n    const { expenses, editExpenseValue } = this.props;\n    return (\n      <tbody>\n        { expenses.map((exp) => (\n          <tr key={ exp.id } className=\"table-body-container\">\n            <td role=\"cell\">{ exp.description }</td>\n            <td role=\"cell\">{ exp.tag }</td>\n            <td role=\"cell\">{ exp.method }</td>\n            <td role=\"cell\">{ exp.value }</td>\n            <td role=\"cell\">{ this.handleCurrencyName(exp) }</td>\n            <td role=\"cell\">{ this.handleExchangeRate(exp) }</td>\n            <td role=\"cell\">{ this.ConvertTheValue(exp) }</td>\n            <td role=\"cell\">{ this.CurrencyToConvert(exp) }</td>\n            <td role=\"cell\">\n              <EditBtn id={ exp.id } editExpenseValue={ editExpenseValue } />\n              <DeleteBtn id={ exp.id } />\n            </td>\n          </tr>\n        )) }\n      </tbody>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nTableBody.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editExpenseValue: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps)(TableBody);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\n\nclass ExpensesTable extends Component {\n  render() {\n    const { expenses, editExpenseValue } = this.props;\n    if (expenses.length > 0) {\n      return (\n        <div className=\"table-expenses-container\">\n          <table>\n            <TableHead />\n            <TableBody editExpenseValue={ editExpenseValue } />\n          </table>\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editExpenseValue: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps)(ExpensesTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport handleInputsAction from '../actions/handleInputs';\n\nimport AddExpensesBtn from './AddExpensesBtn';\nimport InputExpenses from './InputExpenses';\nimport InputDescription from './InputDescription';\nimport CurrenciesSelection from './CurrenciesSelection';\nimport MethodSelection from './MethodSelection';\nimport TagSelection from './TagSelection';\nimport ExpensesTable from './ExpensesTable';\n\nclass ExpensesInput extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    };\n\n    this.changeInput = this.changeInput.bind(this);\n    this.resetInputs = this.resetInputs.bind(this);\n    this.editExpenseValue = this.editExpenseValue.bind(this);\n  }\n\n  changeInput(event) {\n    const { target: { name, value } } = event;\n    const { handlingChange } = this.props;\n    this.setState({\n      [name]: value,\n    });\n    handlingChange(event);\n  }\n\n  resetInputs() {\n    this.setState({\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    });\n  }\n\n  editExpenseValue(editionExp) {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    } = editionExp;\n\n    this.setState({\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    } = this.state;\n\n    return (\n      <>\n        <section className=\"input-expenses-container\">\n          <InputExpenses value={ value } changeInput={ this.changeInput } />\n          <InputDescription value={ description } changeInput={ this.changeInput } />\n          <CurrenciesSelection value={ currency } changeInput={ this.changeInput } />\n          <MethodSelection value={ method } changeInput={ this.changeInput } />\n          <TagSelection value={ tag } changeInput={ this.changeInput } />\n          <AddExpensesBtn resetInputs={ this.resetInputs } />\n        </section>\n        <section>\n          <ExpensesTable editExpenseValue={ this.editExpenseValue } />\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handlingChange: (event) => dispatch(handleInputsAction(event)),\n});\n\nExpensesInput.propTypes = {\n  handlingChange: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ExpensesInput);\n","import { HANDLE_INPUTS } from './index';\n\nexport default function handleInputsAction(event) {\n  const { target: { name, value } } = event;\n  const key = name;\n  return {\n    type: HANDLE_INPUTS,\n    payload: { [key]: value },\n  };\n}\n","import React from 'react';\n\nimport Header from '../components/Header';\nimport ExpensesInput from '../components/ExpensesInput';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <ExpensesInput />\n      </>\n    );\n  }\n}\n\nexport default Wallet;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <main className=\"main-container\">\n        <h2 className=\"header-style\">Trybewallet - project</h2>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route path=\"/carteira\" component={ Wallet } />\n        </Switch>\n      </main>\n    );\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN_USER } from '../actions/index';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nexport default function LoginReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case LOGIN_USER:\n    return {\n      ...state,\n      email: action.payload.email,\n    };\n  default:\n    return state;\n  }\n}\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport {\n  GET_CURRENCY,\n  REQUEST_CURRENCY,\n  FAILED_REQUEST,\n  ADD_EXPENSES,\n  DELETE_EXPENSE,\n  ADD_EDITIONS,\n} from '../actions/index';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false,\n  error: '',\n};\n\nexport default function expensesReducerAction(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_CURRENCY:\n    return {\n      ...state,\n      currencies: state.currencies.concat(action.payload),\n      isFetching: false,\n    };\n  case REQUEST_CURRENCY:\n    return { ...state, isFetching: true };\n  case FAILED_REQUEST:\n    return {\n      ...state,\n      error: action.payload,\n      isFetching: false,\n    };\n  case ADD_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses, { ...action.payload }],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: [...action.payload],\n    };\n  case ADD_EDITIONS:\n    return {\n      ...state,\n      expenses: state.expenses.map((elem) => {\n        if (elem.id === action.payload.id) {\n          return action.payload.handlingInputs[0];\n        }\n        return elem;\n      }),\n    };\n  default:\n    return state;\n  }\n}\n","import { IS_LOGGED } from '../actions/index';\n\nconst INITIAL_STATE = {\n  isLogged: false,\n};\n\nexport default function isLoggedReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case IS_LOGGED:\n    return {\n      ...state,\n      isLogged: action.payload.isLogged,\n    };\n  default:\n    return state;\n  }\n}\n","import {\n  FAILED_REQUEST,\n  HANDLE_INPUTS,\n  GET_EXCHANGE_RATES,\n  CLEAR_INPUT_HANDLER,\n  ADD_EXPENSES_INDEX,\n  SET_ADDITION,\n  EDIT_EXPENSE,\n} from '../actions/index';\n\nconst INITIAL_STATE = {\n  handlingInputs: [{\n    id: '',\n    value: '',\n    description: '',\n    currency: '',\n    method: '',\n    tag: '',\n    exchangeRates: {},\n  }],\n  additionToExpenses: false,\n  editionOfExpense: false,\n  error: '',\n};\n\nexport default function inputHandlerReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case FAILED_REQUEST:\n    return {\n      ...state,\n      error: action.payload,\n    };\n  case HANDLE_INPUTS:\n    return {\n      ...state,\n      handlingInputs: [{ ...state.handlingInputs[0], ...action.payload }],\n    };\n  case GET_EXCHANGE_RATES:\n    return {\n      ...state,\n      handlingInputs: [{\n        ...state.handlingInputs[0],\n        exchangeRates: { ...action.payload },\n      }],\n    };\n  case ADD_EXPENSES_INDEX:\n    return {\n      ...state,\n      handlingInputs: [{ ...state.handlingInputs[0], ...action.payload.id }],\n    };\n  case CLEAR_INPUT_HANDLER:\n    return INITIAL_STATE;\n  case SET_ADDITION:\n    return {\n      ...state,\n      additionToExpenses: !state.additionToExpenses,\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      handlingInputs: action.payload,\n      editionOfExpense: !state.editionOfExpense,\n    };\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport user from './user';\nimport wallet from './wallet';\nimport logStatus from './logStatus';\nimport inputHandler from './inputHandler';\n\nconst appReducer = combineReducers({\n  user,\n  wallet,\n  logStatus,\n  inputHandler,\n});\n\nexport default appReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport appReducer from '../reducers';\n\nconst store = createStore(\n  appReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}